import React from 'react';
import { useTranslation } from 'react-i18next';
import { useOutletContext } from 'react-router-dom';
import { Button, Divider, Grid, Typography } from '@mui/material';
import ArrowForwardIcon from '@mui/icons-material/ArrowForward';
import ArrowBackIcon from '@mui/icons-material/ArrowBack';
import TheoryAccordion from '/components/risk_assessments/TheoryAccordion';
import RiskFactorEvaluation from '/components/risk_assessments/RiskFactorEvaluation';
import '/style/riskassessments.scss';
import ContentBox from '/components/common/ContentBox';
import PastSituations from '/components/risk_assessments/PastSituations';

const Step_4_VictimVulnerability = () => {
  const { t } = useTranslation();
  const {
    riskAssessment,
    step,
    stepNr,
    form,
    control,
    errors,
    onTempSave,
    onChangeToStep,
    isLoading,
    isReadOnly,
    isExternal,
  } = useOutletContext();

  return (
    <Grid container spacing={3} className='StepContent'>
      <Grid item xs={12}>
        <Typography variant='h5' fontWeight={500}>
          {t('routes.assessments.steps.4.step_name')}
        </Typography>
        <Divider />
      </Grid>

      {/** Part 11. Inconsistent attitude */}
      <Grid item xs={12}>
        <ContentBox>
          <Grid container item xs={12}>
            <TheoryAccordion
              text={t('routes.assessments.steps.4.relevant_theory_inconsistent_attitude')}
              source={t('routes.assessments.steps.4.relevant_theory_source_inconsistent_attitude')}
            />
            <Typography variant='h6' className='EvaluationTitle'>
              {t('routes.assessments.steps.4.inconsistent_attitude')}
            </Typography>
            <ul className='EvaluationExplanation'>
              <li>
                <Typography variant='body2'>
                  {t('routes.assessments.steps.4.inconsistent_attitude_list_item1')}
                </Typography>
              </li>
              <li>
                <Typography variant='body2'>
                  {t('routes.assessments.steps.4.inconsistent_attitude_list_item2')}
                </Typography>
              </li>
              <li>
                <Typography variant='body2'>
                  {t('routes.assessments.steps.4.inconsistent_attitude_list_item3')}
                </Typography>
              </li>
              <li>
                <Typography variant='body2'>
                  {t('routes.assessments.steps.4.inconsistent_attitude_list_item4')}
                </Typography>
              </li>
            </ul>
          </Grid>

          <RiskFactorEvaluation
            fieldName={'inconsistentAttitudeRiskEvaluation'}
            step={step}
            stepNr={stepNr}
            control={control}
            errors={errors}
            form={form}
            isReadOnly={isReadOnly}
            isExternal={isExternal}
          />

          {step?.pastRiskAssessments?.length > 0 && (
            <PastSituations
              pastRiskAssessments={step.pastRiskAssessments}
              stepNr={stepNr}
              dataKey='inconsistentAttitude'
            />
          )}
        </ContentBox>
      </Grid>

      {/** Part 12. Extreme fear */}
      <Grid item xs={12}>
        <ContentBox>
          <Grid container item xs={12}>
            <TheoryAccordion
              text={t('routes.assessments.steps.4.relevant_theory_extreme_fear')}
              source={t('routes.assessments.steps.4.relevant_theory_source_extreme_fear')}
            />
            <Typography variant='h6' className='EvaluationTitle'>
              {t('routes.assessments.steps.4.extreme_fear')}
            </Typography>
            <ul className='EvaluationExplanation'>
              <li>
                <Typography variant='body2'>{t('routes.assessments.steps.4.extreme_fear_list_item1')}</Typography>
              </li>
              <li>
                <Typography variant='body2'>{t('routes.assessments.steps.4.extreme_fear_list_item2')}</Typography>
              </li>
              <li>
                <Typography variant='body2'>{t('routes.assessments.steps.4.extreme_fear_list_item3')}</Typography>
              </li>
              <li>
                <Typography variant='body2'>{t('routes.assessments.steps.4.extreme_fear_list_item4')}</Typography>
              </li>
              <li>
                <Typography variant='body2'>{t('routes.assessments.steps.4.extreme_fear_list_item5')}</Typography>
              </li>
            </ul>
          </Grid>

          <RiskFactorEvaluation
            fieldName={'extremeFearRiskEvaluation'}
            step={step}
            stepNr={stepNr}
            control={control}
            errors={errors}
            form={form}
            isReadOnly={isReadOnly}
            isExternal={isExternal}
          />

          {step?.pastRiskAssessments?.length > 0 && (
            <PastSituations pastRiskAssessments={step.pastRiskAssessments} stepNr={stepNr} dataKey='extremeFear' />
          )}
        </ContentBox>
      </Grid>

      {/** Part 13. No help */}
      <Grid item xs={12}>
        <ContentBox>
          <Grid item xs={12}>
            <TheoryAccordion
              text={t('routes.assessments.steps.4.relevant_theory_no_help')}
              source={t('routes.assessments.steps.4.relevant_theory_source_no_help')}
            />
            <Typography variant='h6' className='EvaluationTitle'>
              {t('routes.assessments.steps.4.no_help')}
            </Typography>
            <ul className='EvaluationExplanation'>
              <li>
                <Typography variant='body2'>{t('routes.assessments.steps.4.no_help_list_item1')}</Typography>
              </li>
              <li>
                <Typography variant='body2'>{t('routes.assessments.steps.4.no_help_list_item2')}</Typography>
              </li>
              <li>
                <Typography variant='body2'>{t('routes.assessments.steps.4.no_help_list_item3')}</Typography>
              </li>
              <li>
                <Typography variant='body2'>{t('routes.assessments.steps.4.no_help_list_item4')}</Typography>
              </li>
              <li>
                <Typography variant='body2'>{t('routes.assessments.steps.4.no_help_list_item5')}</Typography>
              </li>
            </ul>
          </Grid>

          <RiskFactorEvaluation
            fieldName={'noHelpRiskEvaluation'}
            step={step}
            stepNr={stepNr}
            control={control}
            errors={errors}
            form={form}
            isReadOnly={isReadOnly}
            isExternal={isExternal}
          />

          {step?.pastRiskAssessments?.length > 0 && (
            <PastSituations pastRiskAssessments={step.pastRiskAssessments} stepNr={stepNr} dataKey='noHelp' />
          )}
        </ContentBox>
      </Grid>

      {/** Part 14 Exposed */}
      <Grid item xs={12}>
        <ContentBox>
          <Grid item xs={12}>
            <TheoryAccordion
              text={t('routes.assessments.steps.4.relevant_theory_exposed')}
              source={t('routes.assessments.steps.4.relevant_theory_source_exposed')}
            />
            <Typography variant='h6' className='EvaluationTitle'>
              {t('routes.assessments.steps.4.exposed')}
            </Typography>
            <ul className='EvaluationExplanation'>
              <li>
                <Typography variant='body2'>{t('routes.assessments.steps.4.exposed_list_item1')}</Typography>
              </li>
              <li>
                <Typography variant='body2'>{t('routes.assessments.steps.4.exposed_list_item2')}</Typography>
              </li>
              <li>
                <Typography variant='body2'>{t('routes.assessments.steps.4.exposed_list_item3')}</Typography>
              </li>
              <li>
                <Typography variant='body2'>{t('routes.assessments.steps.4.exposed_list_item4')}</Typography>
              </li>
              <li>
                <Typography variant='body2'>{t('routes.assessments.steps.4.exposed_list_item5')}</Typography>
              </li>
            </ul>
          </Grid>
          <RiskFactorEvaluation
            fieldName={'exposedRiskEvaluation'}
            step={step}
            stepNr={stepNr}
            control={control}
            errors={errors}
            form={form}
            isReadOnly={isReadOnly}
            isExternal={isExternal}
          />

          {step?.pastRiskAssessments?.length > 0 && (
            <PastSituations pastRiskAssessments={step.pastRiskAssessments} stepNr={stepNr} dataKey='exposed' />
          )}
        </ContentBox>
      </Grid>

      {/** Part 15. Personal Issues */}
      <Grid item xs={12}>
        <ContentBox>
          <Grid item xs={12}>
            <TheoryAccordion
              text={t('routes.assessments.steps.4.relevant_theory_personal_issues')}
              source={t('routes.assessments.steps.4.relevant_theory_source_personal_issues')}
            />
            <Typography variant='h6' className='EvaluationTitle'>
              {t('routes.assessments.steps.4.personal_issues')}
            </Typography>
            <ul className='EvaluationExplanation'>
              <li>
                <Typography variant='body2'>{t('routes.assessments.steps.4.personal_issues_list_item1')}</Typography>
              </li>
              <li>
                <Typography variant='body2'>{t('routes.assessments.steps.4.personal_issues_list_item2')}</Typography>
              </li>
              <li>
                <Typography variant='body2'>{t('routes.assessments.steps.4.personal_issues_list_item3')}</Typography>
              </li>
              <li>
                <Typography variant='body2'>{t('routes.assessments.steps.4.personal_issues_list_item4')}</Typography>
              </li>
              <li>
                <Typography variant='body2'>{t('routes.assessments.steps.4.personal_issues_list_item5')}</Typography>
              </li>
            </ul>
          </Grid>

          <RiskFactorEvaluation
            fieldName={'personalIssuesRiskEvaluation'}
            step={step}
            stepNr={stepNr}
            control={control}
            errors={errors}
            form={form}
            isReadOnly={isReadOnly}
            isExternal={isExternal}
          />

          {step?.pastRiskAssessments?.length > 0 && (
            <PastSituations pastRiskAssessments={step.pastRiskAssessments} stepNr={stepNr} dataKey='personalIssues' />
          )}
        </ContentBox>
      </Grid>

      <Grid item xs={12} className='StepButtonsContainer'>
        <Button
          variant='outlined'
          onClick={() => onChangeToStep(stepNr - 1)}
          className='PrevButton'
          startIcon={<ArrowBackIcon />}>
          {t('common.actions.previous')}
        </Button>

        <Button
          variant='contained'
          onClick={() => onChangeToStep(stepNr + 1)}
          className='NextButton'
          style={{ marginTop: '8px' }}
          endIcon={<ArrowForwardIcon />}>
          {t('common.actions.next')}
        </Button>
      </Grid>
    </Grid>
  );
};

export default React.memo(Step_4_VictimVulnerability);
